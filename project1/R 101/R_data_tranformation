# install packages
install.packages("dplyr")

# load packages

library(dplyr)

# read csv file into R

imdb <- read.csv("imdb.csv", stringsAsFactors = F)

# review data structure

glimpse(imdb)

# print head and tail of data

head(imdb, 10) # to print first 10
tail(imdb ,10) # to print last 10

# load dplyr
library(dplyr)

# select columns
select(mtcars, mpg, wt, hp)
mtcars %>% select(mpg, wt, hp)

# select columns

select(imdb, MOVIE_NAME, RATING) # select columns MOVIE_NAME and RATING
select(imdb, 1, 5) # select column 1 and 5

select(imdb, moive_name = MOVIE_NAME, released_year = YEAR) # to select column and also change their name

# pipe operator

head(imdb)

imdb %>% select(moive_name = MOVIE_NAME, released_year = YEAR)

# filter data

filter(imdb, SCORE >= 9.0)
imdb %>% filter(SCORE >= 9.0)

names(imdb) <- tolower(names(imdb))

imdb %>%
  select(movie_name, year, score) %>%
  filter(score >= 9 & year > 2000)

imdb %>%
  select(movie_name, length, score) %>%
  filter(score == 8.8 | score == 8.3 | score == 9.0)


imdb %>%
  select(movie_name, length, score) %>%
  filter(score %in% c(8.3, 8.8, 9.0))
  
  # filter string columns

imdb %>%
  select(movie_name, genre, rating) %>%
  filter(grepl("Drama", imdb$genre)) # to find genre "Drama" that could be with other genre

imdb %>%
  select(movie_name) %>%
  filter(grepl("The", imdb$movie_name,))
  
# create new columns

imdb %>%
  select(movie_name, score, length) %>%
  mutate(score_group = if_else(score >= 9,"High Rating", "Low Rating"),
         length_group = if_else(length >= 120,"Long Film", "Short Film"))


imdb %>%
  select(movie_name, score) %>%
  mutate(score = score + 0.1) %>%
  head(10)
  
# arrange data

head(imdb)

imdb %>%
  arrange(desc(length)) %>%
  head(10)

imdb %>%
  arrange(rating, desc(length))
  
# summarize ang group_by

imdb %>%
  filter(rating != "") %>%
  group_by(rating) %>%
  summarise(mean_length = mean(length),
            sum_length = sum(length),
            sd_length = sd(length),
            min_length = min(length),
            max_length = max(length),
            n = n())
            
# join data

favourite_films <- data.frame(id = c(5, 10, 25 ,30, 98))

favourite_films %>%
  inner_join(imdb, by = c("id" = "no"))
  
# write csv file (export result)

imdb_prep <- imdb %>%
  select(movie_name, released_year = year, rating, length, score) %>%
  filter(rating == "R" & released_year > 2000)

# export file

write.csv(imdb_prep,"imdb_prep.csv", row.names = FALSE)

# install.packages ("tidyverse")
# dplyr tidyr ggplot2

library(tidyverse)

# data.frame vs tibble

df_tibble <- tibble(id = 1:3, name = c("toy", "pao", "fei"))

df <- data.frame(id = 1:3, name = c("toy", "pao", "fei"))


# convert dataframe to tibble

mtcars

mtcars_tibble <- tibble(mtcars)

# sample_n

set.seed(25) # to remember this sample
sample_n(mtcars, size=5)

sample_frac(mtcars, size=0.20, replace = T) # replace = T mean sample can be repeat

#  slice

mtcars %>%
  slice(1:5)

mtcars %>%
  slice(6:10)

mtcars %>%
  slice(sample(nrow(mtcars), 10))
  
